/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-06-21 14:34:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.http.HttpUtils;
import java.util.Enumeration;
import java.lang.management.*;
import java.util.*;

public final class snoop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("\t<TITLE>JBossEAP6.0 JSP snoop page</TITLE>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("\r\n");
      out.write("<H1>WebApp JSP Snoop page</H1>\r\n");
      out.write("<img src=\"images/jbosscorp_logo.png\">\r\n");
      out.write("\r\n");
      out.write("<h2>JVM Memory Monitor</h2>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("<table border=\"0\" width=\"100%\">\r\n");
      out.write(" \r\n");
      out.write("<tbody>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\" align=\"center\">\r\n");
      out.write("<h3>Memory MXBean</h3>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td width=\"200\">Heap Memory Usage</td>\r\n");
      out.write("<td>\r\n");
      out.print(ManagementFactory.getMemoryMXBean().getHeapMemoryUsage());
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td>Non-Heap Memory Usage</td>\r\n");
      out.write("<td>\r\n");
      out.print(ManagementFactory.getMemoryMXBean().getNonHeapMemoryUsage());
      out.write("\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\"> </td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\" align=\"center\">\r\n");
      out.write("<h3>Memory Pool MXBeans</h3>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");

Iterator iter = ManagementFactory.getMemoryPoolMXBeans().iterator();
while (iter.hasNext()) {
MemoryPoolMXBean item = (MemoryPoolMXBean) iter.next();

      out.write("\r\n");
      out.write(" \r\n");
      out.write("<table style=\"border: 1px #98AAB1 solid;\" border=\"0\" width=\"100%\">\r\n");
      out.write(" \r\n");
      out.write("<tbody>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"2\" align=\"center\"><strong>");
      out.print( item.getName() );
      out.write("</strong></td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td width=\"200\">Type</td>\r\n");
      out.write("<td>");
      out.print( item.getType() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td>Usage</td>\r\n");
      out.write("<td>");
      out.print( item.getUsage() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td>Peak Usage</td>\r\n");
      out.write("<td>");
      out.print( item.getPeakUsage() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("<tr>\r\n");
      out.write("<td>Collection Usage</td>\r\n");
      out.write("<td>");
      out.print( item.getCollectionUsage() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write(" \r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<H2>Request information</H2>\r\n");
      out.write("\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Requested URL:</TH>\r\n");
      out.write("\t<TD>");
      out.print( HttpUtils.getRequestURL(request) );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Request method:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getMethod() );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Request URI:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getRequestURI() );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Request protocol:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getProtocol() );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Servlet path:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getServletPath() );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Path info:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getPathInfo() );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Path translated:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getPathTranslated() );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Query string:</TH>\r\n");
      out.write("\t<TD>");
 if(request.getQueryString()!=null) out.write(request.getQueryString().replaceAll("<", "&lt;").replaceAll(">","&gt;")); 
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Content length:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getContentLength() );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Content type:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getContentType() );
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Server name:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getServerName() );
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Server port:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getServerPort() );
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Remote user:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getRemoteUser() );
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Remote address:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getRemoteAddr() );
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Remote host:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getRemoteHost() );
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=right>Authorization scheme:</TH>\r\n");
      out.write("\t<TD>");
      out.print( request.getAuthType() );
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("</TABLE>\r\n");
      out.write("\r\n");

	Enumeration e = request.getHeaderNames();
	if(e != null && e.hasMoreElements()) {

      out.write("\r\n");
      out.write("<H2>Request headers</H2>\r\n");
      out.write("\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TH align=left>Header:</TH>\r\n");
      out.write("\t<TH align=left>Value:</TH>\r\n");
      out.write("</TR>\r\n");

		while(e.hasMoreElements()) {
			String k = (String) e.nextElement();

      out.write("\r\n");
      out.write("<TR>\r\n");
      out.write("\t<TD>");
      out.print( k );
      out.write("</TD>\r\n");
      out.write("\t<TD>");
      out.print( request.getHeader(k) );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");

		}

      out.write("\r\n");
      out.write("</TABLE>\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	e = request.getParameterNames();
	if(e != null && e.hasMoreElements()) {

      out.write("\r\n");
      out.write("<H2>Request parameters</H2>\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR valign=top>\r\n");
      out.write("\t<TH align=left>Parameter:</TH>\r\n");
      out.write("\t<TH align=left>Value:</TH>\r\n");
      out.write("\t<TH align=left>Multiple values:</TH>\r\n");
      out.write("</TR>\r\n");

		while(e.hasMoreElements()) {
			String k = (String) e.nextElement();
			String val = request.getParameter(k);
			String vals[] = request.getParameterValues(k);

      out.write("\r\n");
      out.write("<TR valign=top>\r\n");
      out.write("\t<TD>");
      out.print( k.replaceAll("<", "&lt;").replaceAll(">","&gt;") );
      out.write("</TD>\r\n");
      out.write("\t<TD>");
      out.print( val.replaceAll("<", "&lt;").replaceAll(">","&gt;") );
      out.write("</TD>\r\n");
      out.write("\t<TD>");

			for(int i = 0; i < vals.length; i++) {
				if(i > 0)
					out.print("<BR>");
				out.print(vals[i].replaceAll("<", "&lt;").replaceAll(">","&gt;"));
			}
		
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");

		}

      out.write("\r\n");
      out.write("</TABLE>\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	e = request.getAttributeNames();
	if(e != null && e.hasMoreElements()) {

      out.write("\r\n");
      out.write("<H2>Request Attributes</H2>\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR valign=top>\r\n");
      out.write("\t<TH align=left>Attribute:</TH>\r\n");
      out.write("\t<TH align=left>Value:</TH>\r\n");
      out.write("</TR>\r\n");

		while(e.hasMoreElements()) {
			String k = (String) e.nextElement();
			Object val = request.getAttribute(k);

      out.write("\r\n");
      out.write("<TR valign=top>\r\n");
      out.write("\t<TD>");
      out.print( k.replaceAll("<", "&lt;").replaceAll(">","&gt;") );
      out.write("</TD>\r\n");
      out.write("\t<TD>");
      out.print( val.toString().replaceAll("<", "&lt;").replaceAll(">","&gt;") );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");

		}

      out.write("\r\n");
      out.write("</TABLE>\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	e = getServletConfig().getInitParameterNames();
	if(e != null && e.hasMoreElements()) {

      out.write("\r\n");
      out.write("<H2>Init parameters</H2>\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR valign=top>\r\n");
      out.write("\t<TH align=left>Parameter:</TH>\r\n");
      out.write("\t<TH align=left>Value:</TH>\r\n");
      out.write("</TR>\r\n");

		while(e.hasMoreElements()) {
			String k = (String) e.nextElement();
			String val = getServletConfig().getInitParameter(k);

      out.write("\r\n");
      out.write("<TR valign=top>\r\n");
      out.write("\t<TD>");
      out.print( k );
      out.write("</TD>\r\n");
      out.write("\t<TD>");
      out.print( val );
      out.write("</TD>\r\n");
      out.write("</TR>\r\n");

		}

      out.write("\r\n");
      out.write("</TABLE>\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
